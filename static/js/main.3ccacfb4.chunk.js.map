{"version":3,"sources":["config.js","App.js","index.js"],"names":["App","props","STATUS_LOADING","STATUS_UNAVAILABLE","STATUS_AVAILABLE","initialStatus","locationCallback","bind","navigator","geolocation","getCurrentPosition","state","stores","status","message","position","thisComponent","this","home","latitude","config","longitude","axios","get","params","lat","coords","lng","m","then","response","data","forEach","store","stock","stockText","remain_stat","distance","getDistance","entry","name","createAt","created_at","stockAt","stock_at","addr","push","length","sort","a","b","setState","className","map","idx","url","updatedFromNow","moment","fromNow","key","href","target","rel","Component","ReactDOM","render","document","getElementById"],"mappings":"gTACe,EACN,WADM,EAEN,YAFM,EAGJ,I,iBC+IIA,E,YA3IX,WAAYC,GAAQ,IAAD,uBACf,4CAAMA,KAEDC,eAAiB,EACtB,EAAKC,mBAAqB,EAC1B,EAAKC,iBAAmB,EAExB,IAAIC,EAAgB,EAAKH,eAPV,OASf,EAAKI,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBAErBC,UAAUC,YACTD,UAAUC,YAAYC,mBAAmB,EAAKJ,kBAE9CD,EAAgB,EAAKF,mBAGzB,EAAKQ,MAAQ,CACTC,OAAQ,GACRC,OAAQR,EACRS,QAAS,0GApBE,E,8EAwBFC,GACb,IAAMC,EAAgBC,KAChBC,EAAO,CACTC,SAAUC,EACVC,UAAWD,GAGfE,IAAMC,IAAI,yEAA0E,CAChFC,OAAQ,CACJC,IAAKV,EAASW,OAAOP,SACrBQ,IAAKZ,EAASW,OAAOL,UACrBO,EAAGR,KAERS,MAAK,SAASC,GACb,IAAMlB,EAAS,GACfkB,EAASC,KAAKnB,OAAOoB,SAAQ,SAASC,GAClC,IAAIC,EAAOC,EAEX,OAAOF,EAAMG,aACT,IAAK,SACDF,EAAQ,EACRC,EAAY,OACZ,MACJ,IAAK,OACDD,EAAQ,EACRC,EAAY,MACZ,MACJ,IAAK,MACDD,EAAQ,EACRC,EAAY,MACZ,MACJ,QACID,EAAQ,EACRC,EAAY,eAIpB,IAAIE,EAAWC,sBAAYpB,EAAM,CAACC,SAAUc,EAAMR,IAAKJ,UAAWY,EAAMN,MAEpEY,EAAQ,CACRd,IAAKQ,EAAMR,IACXE,IAAKM,EAAMN,IACXa,KAAMP,EAAMO,KACZN,MAAOA,EACPC,UAAWA,EACXM,SAAUR,EAAMS,WAChBC,QAASV,EAAMW,SACfC,KAAMZ,EAAMY,KACZR,SAAUA,GAEdzB,EAAOkC,KAAKP,MAGb3B,EAAOmC,OAAS,IACfnC,EAAOoC,MAAK,SAASC,EAAGC,GACpB,OAAGD,EAAEf,QAAUgB,EAAEhB,MAAegB,EAAEhB,MAAQe,EAAEf,MACpCe,EAAEZ,SAAWa,EAAEb,YAG3BrB,EAAcmC,SAAS,CACnBvC,OAAQA,EACRC,OAAQG,EAAcZ,yB,+BAOlC,OAAGa,KAAKN,MAAME,SAAWI,KAAKf,eAEtB,uBAAGkD,UAAU,WAAb,yCAEEnC,KAAKN,MAAME,SAAWI,KAAKd,mBAE7B,uBAAGiD,UAAU,WAAWnC,KAAKN,MAAMG,SAKvC,yBAAKsC,UAAU,OACX,uBAAGA,UAAU,SAAb,yJACA,yBAAKA,UAAU,gBACX,+BACI,+BACI,4BACI,4CACA,4CACA,4CACA,8CAGR,+BAEInC,KAAKN,MAAMC,OAAOyC,KAAI,SAACpB,EAAOqB,GAC1B,IAAIC,EAAG,oCAAgCtB,EAAMR,IAAtC,YAA6CQ,EAAMN,KACtD6B,EAAkBvB,EAAMU,QAAW,MAAQc,IAAOxB,EAAMU,QAAS,sBAAuB,MAAMe,UAAY,GAE9G,OACI,wBAAIC,IAAKL,EAAKF,UAAW,SAAWnB,EAAMC,OACtC,4BAAKD,EAAMO,MACX,wBAAIY,UAAU,SAAQ,uBAAGQ,KAAML,EAAKM,OAAO,SAASC,IAAI,uBAAuB7B,EAAMY,MAAUW,GAC/F,wBAAIJ,UAAU,iBAAiBnB,EAAME,WACrC,wBAAIiB,UAAU,iBAAiBnB,EAAMI,SAArC,iB,GA/HtB0B,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3ccacfb4.chunk.js","sourcesContent":["// 본인의 위치 위도/경도를 넣으세요.\nexport default {\n    lat: 37.5139004, // 위도\n    lng: 127.0299684, // 경도\n    range: 2000 // 검색할 반경(단위는 m, 2000 = 2km)\n};","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { getDistance } from \"geolib\";\nimport config from './config';\nimport moment from 'moment';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.STATUS_LOADING = 0;\n        this.STATUS_UNAVAILABLE = 1;\n        this.STATUS_AVAILABLE = 2;\n\n        let initialStatus = this.STATUS_LOADING;\n\n        this.locationCallback = this.locationCallback.bind(this);\n\n        if(navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.locationCallback);\n        } else {\n            initialStatus = this.STATUS_UNAVAILABLE;\n        }\n\n        this.state = {\n            stores: [],\n            status: initialStatus,\n            message: \"위치 정보를 알 수 없는 브라우저입니다.\"\n        };\n    }\n\n    locationCallback(position) {\n        const thisComponent = this;\n        const home = {\n            latitude: config.lat,\n            longitude: config.lng\n        };\n\n        axios.get('https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json', {\n            params: {\n                lat: position.coords.latitude,\n                lng: position.coords.longitude,\n                m: config.range\n            }\n        }).then(function(response) {\n            const stores = [];\n            response.data.stores.forEach(function(store) {\n                let stock, stockText;\n\n                switch(store.remain_stat) {\n                    case \"plenty\":\n                        stock = 3;\n                        stockText = \"100+\";\n                        break;\n                    case \"some\":\n                        stock = 2;\n                        stockText = \"30+\";\n                        break;\n                    case \"few\":\n                        stock = 1;\n                        stockText = \"<30\";\n                        break;\n                    default:\n                        stock = 0;\n                        stockText = \"없음\";\n                        break;\n                }\n\n                let distance = getDistance(home, {latitude: store.lat, longitude: store.lng});\n\n                let entry = {\n                    lat: store.lat,\n                    lng: store.lng,\n                    name: store.name,\n                    stock: stock,\n                    stockText: stockText,\n                    createAt: store.created_at,\n                    stockAt: store.stock_at,\n                    addr: store.addr,\n                    distance: distance\n                };\n                stores.push(entry);\n            });\n\n            if(stores.length > 0) {\n                stores.sort(function(a, b){\n                    if(a.stock !== b.stock) return (b.stock - a.stock);\n                    return (a.distance - b.distance);\n                });\n\n                thisComponent.setState({\n                    stores: stores,\n                    status: thisComponent.STATUS_AVAILABLE\n                })\n            }\n        });\n    }\n\n    render() {\n        if(this.state.status === this.STATUS_LOADING) {\n            return (\n                <p className=\"tCenter\">로딩중입니다.</p>\n            )\n        } else if(this.state.status === this.STATUS_UNAVAILABLE) {\n            return (\n                <p className=\"tCenter\">{this.state.message}</p>\n            )\n        }\n\n        return (\n            <div className=\"App\">\n                <p className=\"small\">현재 위치정보를 이용하여 반경 2km 이내 약국을 검색합니다.</p>\n                <div className=\"tableWrapper\">\n                    <table>\n                        <thead>\n                            <tr>\n                                <td>이름</td>\n                                <td>주소</td>\n                                <td>수량</td>\n                                <td>거리</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            this.state.stores.map((store, idx) => {\n                                let url = `https://map.google.com/?q=${store.lat},${store.lng}`;\n                                let updatedFromNow = (store.stockAt) ? \" - \" + moment(store.stockAt, \"YYYY/MM/DD HH:mm:ss\", \"ko\").fromNow() : \"\";\n\n                                return (\n                                    <tr key={idx} className={\"stock_\" + store.stock}>\n                                        <td>{store.name}</td>\n                                        <td className=\"small\"><a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{store.addr}</a>{updatedFromNow}</td>\n                                        <td className=\"tCenter small\">{store.stockText}</td>\n                                        <td className=\"tCenter small\">{store.distance}m</td>\n                                    </tr>\n                                );\n                            })\n                        }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}